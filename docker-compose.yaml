services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - todolist-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  app:
    build:
      context: .
      dockerfile: cmd/main/Dockerfile
    depends_on:
      - postgres
      - migrate
    ports:
      - "${SERVER_PORT}:8080"
    env_file:
      - .env
    networks:
      - todolist-network
    restart: unless-stopped
  
  migrate:
    image: migrate/migrate:v4.17.1
    depends_on:
      postgres:
        condition: service_healthy
    command: [
      "-path", "/migrations",
      "-database", "${DB_URL}",
      "up"
    ]
    volumes:
      - ./migrations:/migrations
    env_file:
      - .env
    networks:
      - todolist-network
    

networks:
  todolist-network:
    driver: bridge